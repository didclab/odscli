image: docker:stable

stages:
  - build
  - deploy

variables:
  APP_PORT: 8092
  DOCKER_DRIVER: overlay
  APP_NAME: ods-cli
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

##Build the project
package-build:
  image: alpine
  stage: build
  before_script:
    - apk add --update zip
  only:
    - yj/master-ci
  script: 
    - zip -r ods-cli.zip .
  artifacts:
    paths:
      - ods-cli.zip

aws-service-deploy:
  image: alpine
  stage: deploy
  only:
    - yj/master-ci
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$CI_CD_PEM" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "echo 'Hello' "
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "if [ -d "/home/ubuntu/ods-cli.zip" ]; then rm /home/ubuntu/ods-cli.zip ; fi"
    - scp -o StrictHostKeyChecking=no ods-cli.zip CI_EC2_USER@$NODE_IP:/home/ubuntu/
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "if [ -d "/home/ubuntu/Repos/ods-cli/" ]; then rm -rf /home/ubuntu/Repos/ods-cli/ ; fi"
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "mkdir /home/ubuntu/Repos/ods-cli"
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "ls /home/ubuntu"
    - ssh -o StrictHostKeyChecking=no CI_EC2_USER@$NODE_IP "unzip ods-cli.zip -d '/home/ubuntu/Repos/ods-cli/' "

